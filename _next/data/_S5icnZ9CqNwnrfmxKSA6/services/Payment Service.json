{"pageProps":{"service":{"name":"Payment Service","summary":"Event based application that integrates with Stripe.\n","domain":null,"owners":["dboyne"],"repository":{},"tags":[],"externalLinks":[],"badges":[],"openAPISpec":"openapi: 3.0.0\r\ninfo:\r\n  description: A Payment Service API\r\n  version: 0.0.1\r\n  title: Payment service API\r\nservers:\r\n  - url: http://payment.example.com/v1\r\n    description: Optional server description, e.g. Main (production) server\r\n  - url: http://payment.example.com\r\n    description: Optional server description, e.g. Internal staging server for testing\r\npaths:\r\n  /getSinglePaymentURL:\r\n    get:\r\n      tags:\r\n        - PaymentServices\r\n      summary: Generate a Payment endpoint URL\r\n      operationId: singlepaymenturlUsingGET\r\n      consumes:\r\n        - application/json\r\n      produces:\r\n        - application/xml\r\n      parameters:\r\n        - name: transType\r\n          in: query\r\n          description: transType\r\n          required: true\r\n          type: string\r\n        - name: invoiceNumber\r\n          in: query\r\n          description: invoiceNumber\r\n          required: true\r\n          type: string\r\n        - name: approvedPage\r\n          in: query\r\n          description: approvedPage\r\n          required: true\r\n          type: string\r\n        - name: declinedPage\r\n          in: query\r\n          description: declinedPage\r\n          required: true\r\n          type: string\r\n        - in: query\r\n          name: errorPage\r\n          description: errorPage\r\n          required: true\r\n          type: string\r\n        - in: query\r\n          name: totalItemsAmount\r\n          description: totalItemsAmount\r\n          required: true\r\n          type: string\r\n        - name: ref1\r\n          in: query\r\n          description: ref1\r\n          required: false\r\n          type: string\r\n        - name: ref2\r\n          in: query\r\n          description: ref2\r\n          required: false\r\n          type: string\r\n        - name: ref3\r\n          in: query\r\n          description: ref3\r\n          required: false\r\n          type: string\r\n        - name: minutesToExpire\r\n          in: query\r\n          description: minutesToExpire\r\n          required: true\r\n          type: string\r\n      responses:\r\n        '200':\r\n          description: Successful operation\r\n          schema:\r\n            $ref: '#/definitions/SinglePaymentResponse'\r\n        '401':\r\n          description: Unauthorized\r\n        '403':\r\n          description: Forbidden\r\n        '404':\r\n          description: Not Found\r\ndefinitions:\r\n  SinglePaymentResponse:\r\n    type: object\r\n    properties:\r\n      respCode:\r\n        type: integer\r\n        format: int32\r\n      respMsg:\r\n        type: string\r\n      respValue:\r\n        type: string","asyncAPISpec":null,"publishes":[{"name":"PaymentProcessed","version":"0.0.1","summary":"Holds information about the payment that has been processed.\n","domain":null,"producerNames":["Payment Service"],"consumerNames":["Orders Service"],"owners":["dboyne","mSmith"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}],"subscribes":[{"name":"OrderRequested","version":"0.0.1","summary":"Holds information about the customers order.\n","domain":null,"producerNames":["Basket Service"],"consumerNames":["Payment Service"],"owners":["dboyne","mSmith"],"externalLinks":[],"badges":[],"tags":[],"historicVersions":[]}]},"markdown":{"content":"\r\nThe payment service is our own internal payment service that listens to events from stripe and handles them within our own domain. \r\n\r\nWe use Stripe to handle services and use this Payment service to enrich events for internal use.\r\n\r\n<OpenAPI />\r\n\r\n<NodeGraph />\r\n","lastModifiedDate":"2024/1/13","source":{"compiledSource":"var u=Object.defineProperty,m=Object.defineProperties;var h=Object.getOwnPropertyDescriptors;var r=Object.getOwnPropertySymbols;var p=Object.prototype.hasOwnProperty,a=Object.prototype.propertyIsEnumerable;var i=(e,o,n)=>o in e?u(e,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[o]=n,s=(e,o)=>{for(var n in o||(o={}))p.call(o,n)&&i(e,n,o[n]);if(r)for(var n of r(o))a.call(o,n)&&i(e,n,o[n]);return e},d=(e,o)=>m(e,h(o));var c=(e,o)=>{var n={};for(var t in e)p.call(e,t)&&o.indexOf(t)<0&&(n[t]=e[t]);if(e!=null&&r)for(var t of r(e))o.indexOf(t)<0&&a.call(e,t)&&(n[t]=e[t]);return n};const makeShortcode=e=>function(n){return console.warn(\"Component \"+e+\" was not imported, exported, or provided by MDXProvider as global scope\"),mdx(\"div\",s({},n))},OpenAPI=makeShortcode(\"OpenAPI\"),NodeGraph=makeShortcode(\"NodeGraph\"),layoutProps={},MDXLayout=\"wrapper\";function MDXContent(n){var t=n,{components:e}=t,o=c(t,[\"components\"]);return mdx(MDXLayout,d(s(s({},layoutProps),o),{components:e,mdxType:\"MDXLayout\"}),mdx(\"p\",null,\"The payment service is our own internal payment service that listens to events from stripe and handles them within our own domain. \"),mdx(\"p\",null,\"We use Stripe to handle services and use this Payment service to enrich events for internal use.\"),mdx(OpenAPI,{mdxType:\"OpenAPI\"}),mdx(NodeGraph,{mdxType:\"NodeGraph\"}))}MDXContent.isMDXComponent=!0;\n","scope":{}}},"breadCrumbs":[{"name":"Services","href":"/services","current":false},{"name":"Payment Service","href":"/services/Payment Service","current":true}]},"__N_SSG":true}